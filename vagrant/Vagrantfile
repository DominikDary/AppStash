# -*- mode: ruby -*-
# vi: set ft=ruby :

$elasticsearch_script = <<SCRIPT
#!/bin/bash
cat > /etc/hosts <<EOF
127.0.0.1       localhost

# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters

10.211.55.100   elasticsearch-node
10.211.55.101   app-server-node-1
EOF

cd ~
sudo apt-get update
sudo apt-get install openjdk-7-jre-headless apache2 apache2-doc links curl -y

### Check http://www.elasticsearch.org/download/ for latest version of ElasticSearch and replace wget link below
wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.1.1.tar.gz
tar -xf elasticsearch-1.1.1.tar.gz
rm elasticsearch-1.1.1.tar.gz
sudo mv elasticsearch-* elasticsearch
sudo mv elasticsearch /usr/local/share

wget http://github.com/elasticsearch/elasticsearch-servicewrapper/tarball/master
tar -xf *master*
sudo mv *servicewrapper*/service /usr/local/share/elasticsearch/bin/
rm -Rf *servicewrapper*
sudo /usr/local/share/elasticsearch/bin/service/elasticsearch install
sudo ln -s `readlink -f /usr/local/share/elasticsearch/bin/service/elasticsearch` /usr/local/bin/rcelasticsearch

sudo service elasticsearch start

wget https://download.elasticsearch.org/kibana/kibana/kibana-3.1.0.tar.gz
tar -xf kibana-3.1.0.tar.gz
rm kibana-3.1.0.tar.gz
sudo mv kibana-* kibana
sudo mv kibana/* /var/www/
rf -rf kibana/

sudo groupadd www
sudo adduser vagrant www
sudo chgrp www /var/www
sudo chmod g+w /var/www
SCRIPT

$app_server_script = <<SCRIPT
#!/bin/bash
cat > /etc/hosts <<EOF
# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters

10.211.55.100   elasticsearch-node
10.211.55.101   app-server-node-1
EOF

cd ~
sudo apt-get update
sudo apt-get install python-software-properties git links curl mongodb mongodb-clients mongodb-server unzip -y  -q
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer -y -q

cd /usr/local/
sudo wget http://www.us.apache.org/dist/tomcat/tomcat-8/v8.0.3/bin/apache-tomcat-8.0.3.tar.gz
sudo tar -xvf apache-tomcat-8.0.3.tar.gz
rm apache-tomcat-8.0.3.tar.gz

sudo cat > /etc/init.d/tomcat8  <<EOF
#!/bin/bash
export CATALINA_HOME=/usr/local/apache-tomcat-8.0.3
PATH=/sbin:/bin:/usr/sbin:/usr/bin
start() {
  sh $CATALINA_HOME/bin/startup.sh
}
stop() {
  sh $CATALINA_HOME/bin/shutdown.sh
}
case $1 in
  start|stop) $1;;
  restart) stop; start;;
  *) echo "Run as $0 <start|stop|restart>"; exit 1;;
esac
EOF
sudo chmod +x /etc/init.d/tomcat8

sudo cat > /usr/local/apache-tomcat-8.0.3/bin/setenv.sh  <<EOF
JAVA_HOME=/usr/lib/jvm/java-8-oracle/jre/
JAVA_OPTS="-Djava.awt.headless=true -Xmx1024M -Xms512M"
EOF
sudo chmod +x /usr/local/apache-tomcat-8.0.3/bin/setenv.sh

sudo rm /usr/local/apache-tomcat-8.0.3/conf/tomcat-users.xml
sudo cat > /usr/local/apache-tomcat-8.0.3/conf/tomcat-users.xml <<EOF
<tomcat-users>
  <role rolename="probeuser" />
  <role rolename="poweruser" />
  <role rolename="poweruserplus" />
  <role rolename="manager"/>
  <role rolename="admin"/>
  <user username="admin" password="topsecret" roles="admin,manager"/>
</tomcat-users>
EOF

cd ~
wget https://psi-probe.googlecode.com/files/probe-2.3.3.zip
unzip probe-2.3.3.zip
sudo mv probe.war /usr/local/apache-tomcat-8.0.3/webapps/

git clone https://github.com/zutherb/mongodb-onlineshop.git mongodb-onlineshop
cd mongodb-onlineshop/
export JAVA_HOME=/usr/lib/jvm/java-8-oracle/jre/
./gradlew -p shop/ui war
cp shop/ui/build/libs/ui-0.4-DEV.war /usr/local/apache-tomcat-8.0.3/webapps/pizza.war

sudo service tomcat8 restart

SCRIPT

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.define :elasticsearch do |elasticsearch|
    elasticsearch.vm.box = "precise64"
    elasticsearch.vm.provider "virtualbox" do |v|
      v.name = "elasticsearch-node"
      v.customize ["modifyvm", :id, "--memory", "4112"]
    end
    elasticsearch.vm.network :private_network, ip: "10.211.55.100"
    elasticsearch.vm.hostname = "elasticsearch-node"
    elasticsearch.vm.provision :shell, :inline => $elasticsearch_script
    elasticsearch.vm.network :forwarded_port, host: 9200, guest: 9200, auto_correct: true
    elasticsearch.vm.network :forwarded_port, host: 80, guest: 80, auto_correct: true
  end

  config.vm.define :appserver1 do |appserver1|
    appserver1.vm.box = "precise64"
    appserver1.vm.provider "virtualbox" do |v|
      v.name = "app-server-node-1"
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    appserver1.vm.network :private_network, ip: "10.211.55.101"
    appserver1.vm.hostname = "app-server-node-1"
    appserver1.vm.provision :shell, :inline => $app_server_script
    # appserver1.vm.network :forwarded_port, host: 9200, guest: 9200, auto_correct: true
    # appserver1.vm.network :forwarded_port, host: 80, guest: 80, auto_correct: true
  end
end
