# -*- mode: ruby -*-
# vi: set ft=ruby :

$elasticsearch_script = <<SCRIPT
#!/bin/bash
cat > /etc/hosts <<EOF
127.0.0.1       localhost

# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters

10.211.55.100   elasticsearch-node
10.211.55.101   app-server-node-1
EOF

sudo rm /etc/apt/sources.list
sudo cat > /etc/apt/sources.list <<EOF
deb http://eu-west-1.ec2.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse
deb http://eu-west-1.ec2.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse
deb http://eu-west-1.ec2.archive.ubuntu.com/ubuntu/ precise-security main restricted universe multiverse
EOF

cd ~
sudo apt-get update
sudo apt-get install openjdk-7-jre-headless apache2 apache2-doc links curl -y

### Check http://www.elasticsearch.org/download/ for latest version of ElasticSearch and replace wget link below
wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.1.1.tar.gz
tar -xf elasticsearch-1.1.1.tar.gz
rm elasticsearch-1.1.1.tar.gz
sudo mv elasticsearch-* elasticsearch
sudo mv elasticsearch /usr/local/share

wget http://github.com/elasticsearch/elasticsearch-servicewrapper/tarball/master
tar -xf *master*
sudo mv *servicewrapper*/service /usr/local/share/elasticsearch/bin/
rm -Rf *servicewrapper*
sudo /usr/local/share/elasticsearch/bin/service/elasticsearch install
sudo ln -s `readlink -f /usr/local/share/elasticsearch/bin/service/elasticsearch` /usr/local/bin/rcelasticsearch

sudo service elasticsearch start

wget https://download.elasticsearch.org/kibana/kibana/kibana-3.1.0.tar.gz
tar -xf kibana-3.1.0.tar.gz
rm kibana-3.1.0.tar.gz
sudo mv kibana-* kibana
sudo mv kibana/* /var/www/
rf -rf kibana/

sudo groupadd www
sudo adduser vagrant www
sudo chgrp www /var/www
sudo chmod g+w /var/www
SCRIPT

$app_server_script = <<SCRIPT
#!/bin/bash
cat > /etc/hosts <<EOF
# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters

10.211.55.100   elasticsearch-node
10.211.55.101   app-server-node-1
EOF

sudo rm /etc/apt/sources.list
sudo cat > /etc/apt/sources.list <<EOF
deb http://eu-west-1.ec2.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse
deb http://eu-west-1.ec2.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse
deb http://eu-west-1.ec2.archive.ubuntu.com/ubuntu/ precise-security main restricted universe multiverse
EOF

sudo apt-get update
sudo apt-get install tomcat7 tomcat7-admin python-software-properties git links curl mongodb mongodb-clients mongodb-server unzip -y  -q
cd /usr/local/
sudo wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "http://download.oracle.com/otn-pub/java/jdk/8u5-b13/jdk-8u5-linux-x64.tar.gz"
sudo tar xzf jdk-8u5-linux-x64.tar.gz
sudo update-alternatives --install "/usr/bin/java" "java" "/usr/local/jdk1.8.0_05/bin/java" 1
sudo update-alternatives --install "/usr/bin/javac" "javac" "/usr/local/jdk1.8.0_05/bin/javac" 1
sudo update-alternatives --install "/usr/bin/javaws" "javaws" "/usr/local/jdk1.8.0_05/bin/javaws" 1

sudo /etc/default/tomcat7
sudo cat > /etc/default/tomcat7  <<EOF
TOMCAT7_USER=tomcat7
TOMCAT7_GROUP=tomcat7
JAVA_HOME=/usr/local/jdk1.8.0_05
JAVA_OPTS="-Djava.awt.headless=true -Xmx1024M -Xms512M"
EOF

sudo rm /etc/tomcat7/server.xml
sudo cat > /etc/tomcat7/server.xml <<EOF
<?xml version='1.0' encoding='utf-8'?>
<Server port="8005" shutdown="SHUTDOWN">
    <Listener className="org.apache.catalina.core.JasperListener"/>
    <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener"/>
    <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener"/>
    <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener"/>

    <GlobalNamingResources>
        <Resource name="UserDatabase" auth="Container"
                  type="org.apache.catalina.UserDatabase"
                  description="User database that can be updated and saved"
                  factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
                  pathname="conf/tomcat-users.xml"/>
    </GlobalNamingResources>

    <Service name="Catalina">

        <Connector port="8080" protocol="HTTP/1.1"
                   connectionTimeout="20000"
                   URIEncoding="UTF-8"
                   redirectPort="8443"/>
        <Engine name="Catalina" defaultHost="localhost">

            <Realm className="org.apache.catalina.realm.LockOutRealm">
                <Realm className="org.apache.catalina.realm.UserDatabaseRealm"
                       resourceName="UserDatabase"/>
            </Realm>

            <Host name="localhost" appBase="webapps"
                  unpackWARs="true" autoDeploy="true">
                <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
                       prefix="localhost_access_log." suffix=".txt"
                       pattern="{ &quot;remoteHost&quot;:&quot;%h&quot;, &quot;remoteLogname&quot;:&quot;%l&quot;, &quot;user&quot;:&quot;%u&quot;, &quot;time&quot;:&quot;%t&quot;, &quot;request&quot;:&quot;%r&quot;, &quot;status&quot;:&quot;%s&quot;, &quot;size&quot;:&quot;%b&quot;, &quot;referer&quot;:&quot;%{Referer}i&quot;, &quot;userAgent&quot;:&quot;%{User-agent}i&quot; }"/>
            </Host>
        </Engine>
    </Service>
</Server>
EOF

sudo rm /var/lib/tomcat7/conf/tomcat-users.xml
sudo cat > /var/lib/tomcat7/conf/tomcat-users.xml <<EOF
<tomcat-users>
  <role rolename="probeuser" />
  <role rolename="poweruser" />
  <role rolename="poweruserplus" />
  <role rolename="manager"/>
  <role rolename="admin"/>
  <user username="admin" password="topsecret" roles="admin,manager"/>
</tomcat-users>
EOF

cd ~
wget https://psi-probe.googlecode.com/files/probe-2.3.3.zip
unzip probe-2.3.3.zip
sudo mv probe.war /var/lib/tomcat7/webapps/

cd ~
git clone https://github.com/zutherb/AppStash.git mongodb-onlineshop
cd mongodb-onlineshop/
export JAVA_HOME=/usr/local/jdk1.8.0_05
./gradlew -p shop/ui war
sudo cp shop/ui/build/libs/ui-0.4-DEV.war /var/lib/tomcat7/webapps/pizza.war

sudo service tomcat7 restart

cd ~
wget https://download.elasticsearch.org/logstash/logstash/logstash-1.4.1.tar.gz
tar xvf logstash-1.4.1.tar.gz
rm logstash-1.4.1.tar.gz
sudo mv logstash-1.4.1 /usr/local/logstash

sudo mkdir /etc/logstash/
sudo cat > /etc/logstash/logstash.conf <<EOF
input {
        file {
                type => "access-log"
                path => "/var/log/tomcat7/localhost_access_log.*.txt"
                codec => json
        }
        file {
                type => "catalina-log"
                path => "/var/log/tomcat7/catalina.out"
                codec => json
        }
}
output {
        elasticsearch {
                host => "10.211.55.100"
                port => "9200"
                embedded => false
                codec => json
                protocol => http
        }
}
EOF

sudo cat > /etc/init.d/logstash <<EOF
#! /bin/sh

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/etc/init.d
. /lib/lsb/init-functions

case "$1" in
    start)
        log_daemon_msg "Starting access"
        nohup /usr/local/logstash/bin/logstash -f /etc/logstash/logstash.conf >/usr/local/logstash/logstash.log$$ 2>&1 &
        sleep 1
        ;;
    restart|reload|force-reload)
        log_daemon_msg "Restart access"
        kill `ps ax|grep logstash|sed 's/\(.*\)pts.*/\1/g'|head -n 1`
        nohup /usr/local/logstash/bin/logstash -f /etc/logstash/logstash.conf >/usr/local/logstash/logstash.log$$ 2>&1 &
        sleep 1
        ;;
    stop)
        kill `ps ax|grep logstash|sed 's/\(.*\)pts.*/\1/g'|head -n 1`
        ;;
    *)
        echo "Usage: $0 start|restart|stop" >&2
        exit 3
        ;;
esac
EOF
sudo chmod +x /etc/init.d/logstash
sudo service logstash start

sudo service tomcat7 restart
SCRIPT

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.define :elasticsearch do |elasticsearch|
    elasticsearch.vm.box = "precise64"
    elasticsearch.vm.provider "virtualbox" do |v|
      v.name = "elasticsearch-node"
      v.customize ["modifyvm", :id, "--memory", "4112"]
    end
    elasticsearch.vm.network :private_network, ip: "10.211.55.100"
    elasticsearch.vm.hostname = "elasticsearch-node"
    elasticsearch.vm.provision :shell, :inline => $elasticsearch_script
    elasticsearch.vm.network :forwarded_port, host: 9200, guest: 9200, auto_correct: true
    elasticsearch.vm.network :forwarded_port, host: 80, guest: 80, auto_correct: true
  end

  config.vm.define :appserver1 do |appserver1|
    appserver1.vm.box = "precise64"
    appserver1.vm.provider "virtualbox" do |v|
      v.name = "app-server-node-1"
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    appserver1.vm.network :private_network, ip: "10.211.55.101"
    appserver1.vm.hostname = "app-server-node-1"
    appserver1.vm.provision :shell, :inline => $app_server_script
    # appserver1.vm.network :forwarded_port, host: 9200, guest: 9200, auto_correct: true
    # appserver1.vm.network :forwarded_port, host: 80, guest: 80, auto_correct: true
  end
end
